= rubygems-compile

A compile command for <tt>macgem</tt> to install and compile gems using the MacRuby compiler.

All you need to do is:

     gem install rubygems-compile

And then you're off to the races! When you install gems using <tt>macgem compile</tt> the gem will also be compiled.

== Description

<tt>rubygems-compile</tt> provides two additional commands for <tt>macgem</tt>. The first is <tt>compile</tt>; you can now say <tt>macgem compile nokogiri</tt> and the <tt>nokogiri</tt> gem will be installed and compiled. Then, whenever you use <tt>nokogiri</tt>, the compiled version of the gem files will be loaded instead of the uncompiled version of the gem files.

<tt>macgem compile</tt> is a superset of the <tt>gem install</tt> command, so you can still use all the options you would normally use. <tt>macgem compile</tt> has one extra option to delete all the original .rb files after the .rbo is generated; use this option with caution.

Some gems work perfectly when compiled, and some do not (for various reasons), so you should try a gem non-compiled first. If you dove head first into using compiled gems and you need to back-peddle, you will have to uninstall and then reinstall the gem.

== Caveats

* Large gems will take a long time to compile, but these are the gems that will benefit the most from being compiled
* This has only been tested on a few gems, but should not break existing gems since we leave the original files around by default
* As of MacRuby 0.10, you cannot get usable backtrace data for compiled ruby files
  * This may be fixed for MacRuby 0.11
* .rbo files take up more disk space than their .rb equivalents

== Known Reasons A Compiled Gem Will Not Work

* Using non-standard file suffixes (e.g. <tt>mime-types</tt> has a <tt>.rb.data</tt> file)
  * This will be addressed in a later release
* Gems that explicitly require a file with the file suffix (e.g. <tt>require 'nokogiri.rb'</tt>)
  * This should be addressable in a future release

== TODO

* A gem install option would be most natural instead of compile command
  * gem install --compile nokogiri
* Code parsing to WARN about gems that will not work when compiled
* Compile multiple .rb files to a single .rbo binary (instead of an .rbo for each .rb)
  * A naive implementation will not work for gems that are loaded modularly
* Files in bin/ usually don't include the file extension and are not compiled

== Copyright

Copyright (c) 2011 Mark Rada. See LICENSE.txt for further details.
